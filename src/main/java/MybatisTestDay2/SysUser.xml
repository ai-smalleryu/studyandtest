<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="MybatisTestDay2.SysUserInter">
    <!--    public  void addSysUser(SysUser sysUser);
        public void updateSysUser(SysUser sysUser);
        public void deleteSysUser(Integer id);
            private int id;
        private String userName;
        private String userPassword;
        private String userEmail;
        private String userInfo;
        private byte[] userImg;
        private Date createTime;
    getSysUserByLikeName
    -->
    <resultMap id="sysUser" type="MybatisTestDay2.SysUser">
        <id property="id" column="id"></id>
        <result property="userName" column="name"></result>
        <result property="userPassword" column="password"></result>
        <result property="userEmail" column="email"></result>
        <result property="userInfo" column="info"></result>
        <result property="userImg" column="img"></result>
        <result property="createTime" column="time"></result>
        <!--联合查询的级联属性查询
        <result property="id" column="student.id"></result>
        <result property="name" column="student.name"></result>
        &lt;!&ndash;property="" 指定那个属性是联合的对象 &ndash;&gt;
        <association property="" javaType=""></association>-->
    </resultMap>
    <!--   getUserMap-->

    <select id="selectUnionId" resultMap="sysUser">
        select  * from sys_user s,student1 s1 where s.id=
    </select>
    <!--多个参数时会封装成一个map集合-->
    <!--如果返回值类型是一个集合 那么返回值类型应该写集合中元素的类型-->
    <select id="getSysUserByLikeName" resultMap="sysUser">
      select * from sys_user where name like #{name}
  </select>
    <select id="getSaysUsersIdmore" resultMap="sysUser">
    select * from sys_user where id = #{param1} and  password = #{param2}</select>
    <select id="getSaysUsersAll" resultMap="sysUser">
    select * from sys_user </select>
    <select id="getSaysUsersIdmore2" resultMap="sysUser">
    select * from sys_user where id = #{id} and password = #{password}</select>
    <select id="getSaysUsersId" resultMap="sysUser">
    select * from sys_user where id = #{cd}</select>
    <!--parameterType 指定插入类型，可以省略，直接写对象的名-->
    <insert id="addSysUser" parameterType="MybatisTestDay2.SysUser">insert  into sys_user (id,name,password,email,info,img) values
 (#{id},#{userName},#{userPassword},#{userEmail},#{userInfo},#{userImg})</insert>
    <!-- <update id="updateSysUser" parameterMap="sysUser">update  sys_user set  name=#{name},password=#{password} where id=#{id}</update>
    <delete id="deleteSysUser" parameterMap="sysUser">delete from sys_user where id=#{id}</delete>-->

    <!-- public SysUser getSaysUsersIdMap(Map<String,Object> map);
    key值自取map的集
    -->
    <select id="getSaysUsersIdMap" resultMap="sysUser">
        select * from sys_user where id = #{id} and name =#{name };
    </select>
    <!-- list方法-->
    <select id="getSaysUsersList" resultMap="sysUser">
        select * from sys_user where id = #{objects[0]} and name =#{objects[1] };
    </select>
    <!--测试$传参使用-->
    <select id="getSaysUsersIdMapdoller" resultMap="sysUser">
        select * from ${name2} where id = #{id} and name =#{name };
    </select>

</mapper>

